- Purpose: Manage player character behavior, including movement, shooting, and rendering in a pygame shoot-'em-up game. 
- Imports:
  - import pygame
  - from pygame.math import Vector2
  - import configs.config as config
  - from game.bullet import Bullet
  - from game.utils.assets_loader import AssetsLoader
- Definitions:
  - Classes:
    - Player:
      - Attributes:
        - position: tracks the player's position using a Vector2.
        - speed: the player's movement speed, sourced from the configuration.
        - bullets: maintains a list of the player's active bullets.
        - direction: direction vector for player's movement.
        - player_image: stores the player's current image to be rendered.
        - size: indicates the dimensions of the player image.
      - Methods:
        - __init__(start_position: Vector2):
          - Initializes player's position, speed, and loads the player's image. Determines the player's image size proportionate to the screen size by utilizing a scaling ratio from the configuration.
        - move(direction: Vector2) -> None:
          - Updates the player's direction and computes new position. Ensures the player remains within screen bounds.
        - shoot() -> None:
          - Appends a new bullet to the player's bullets list, starting at the player's current position.
        - draw(surface: pygame.Surface) -> None:
          - Renders and positions the player's image onto the provided surface.
        - update(screen: pygame.Surface) -> None:
          - Calls move to adjust the player's position and updates all bullets' movements.
        - render(screen: pygame.Surface) -> None:
          - Draws the player and manages additional rendering tasks.