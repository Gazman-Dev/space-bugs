- Purpose: Represents bullet objects in the game, handling movement, collision detection, rendering, and identifying their location. Integrates sound effects for bullet events using the SoundManager, ensuring appropriate audio feedback during gameplay.
- Imports:
  - import pygame
  - from path.to.vector2_module import Vector2
  - from game.utils.sound_manager import SoundManager
- Definitions:
  - Classes:
    - Bullet: 
      - Attributes:
        - position: Vector2 - starting coordinates for the bullet.
        - speed: float - bullet speed value.
        - direction: Vector2 - direction vector for bullet movement.
        - radius: int - bullet's visual size on the screen.
        - color: tuple[int, int, int] - RGB color value of the bullet.
        - sound_manager: SoundManager - handles sound effects for bullet events.
      - Methods:
        - __init__(position: Vector2, speed: float, direction: Vector2, radius: int = 5, color: tuple[int, int, int] = (255, 0, 0), sound_manager: SoundManager):
          - Initializes with position, speed, direction, radius, color, and a sound manager instance. Sets up attributes for circle representation.
        - move():
          - Updates position by applying speed and direction, adjusted for elapsed time.
        - update(surface: pygame.Surface):
          - Updates position through move method; checks boundary limits and transforms position if needed.
        - draw(screen: pygame.Surface):
          - Draws the bullet as a circle at the current position on the screen with the specified radius and color.
        - play_shooting_sound():
          - Uses sound_manager to play the shooting sound when a bullet is fired.
        - is_off_screen(screen_size: tuple[int, int]) -> bool:
          - Checks if the bullet's position has exceeded the screen boundaries; uses sound_manager to play an out-of-bound sound if so.
        - rect() -> pygame.Rect:
          - Produces a Rect object based on the bullet's position and radius to identify the bullet's area on the screen.