- Purpose: Manages player controls and actions, including movement mechanics, rendering, sound integration, and seamless updates of player components based on the screen size using configuration settings. Employs SoundManager to facilitate auditory player-related experiences.

- Imports:
  - import pygame
  - import configs.config as config
  - import pygame.math.Vector2
  - import assets_loader
  - from game.utils.sound_manager import SoundManager

- Definitions:
  - Classes:
    - Player:
      - Attributes:
        - position: pygame.math.Vector2 - Sets initial coordinates of the player ship on screen; utilizes Vector2 for precise position tracking.
        - speed: float - Defined by config.PLAYER_SPEED; influences player's movement velocity.
        - direction: pygame.math.Vector2 - Vector2 representation for player movement direction.
        - player_image: pygame.Surface - Visual asset for the player ship, obtained via assets_loader.
        - size: pygame.math.Vector2 - Represents player ship size proportionally, adapting to screen dimensions from config.
        - rect: pygame.Rect - Defines rectangular boundary based on current position and size of the player ship for collision detection.
        - sound_manager: SoundManager - Manages audio effects related to player actions like movement or interaction.

      - Methods:
        - move(self, direction: pygame.math.Vector2) -> None:
          - Updates player position by applying the speed to the direction vector for seamless movement with Vector2 math. Adjusts according to screen size for proportional navigation. Plays the movement sound using the MOVE_SOUND constant from SoundManager for auditory feedback.
        - draw(self, screen: pygame.Surface) -> None:
          - Renders the player ship image on the provided screen surface; ensures central alignment with current position and scales the image to the appropriate size. Positioning relates to the screen ensuring all game elements are proportionately displayed.
        - update(self, screen: pygame.Surface) -> None:
          - Incorporates movement and cycle adjustments for real-time gameplay. Adjusts position using input direction and ensures position updates based on the screen's size. Plays update-related sounds utilizing the SoundManager as necessary.
        - update_rect(self) -> None:
          - Refreshes the player's rect attribute, aligning it with the current position and size, enabling precise collision detection and screen boundary handling.
        - play_sound(self, sound_name: str, loop: bool = False) -> None:
          - Utilizes the sound_manager to trigger a specific sound effect associated with a player's action by referencing sound constants like MOVE_SOUND. Plays the sound name provided and loops if specified.