- Purpose: Represents bullet objects in the game, allowing for movement, collision detection, and rendering.
- Imports:
  - import pygame
  - import math
  - from path.to.vector2_module import Vector2
- Definitions:
  - Classes:
    - Bullet:
      - Attributes:
        - position: Vector2 - starting coordinates for the bullet.
        - speed: float - bullet speed value.
        - direction: Vector2 - direction vector for bullet movement.
        - radius: int - bullet's visual size on the screen.
        - color: tuple[int, int, int] - RGB color value of the bullet.
      - Methods:
        - __init__(position: Vector2, speed: float, direction: Vector2, radius: int = 5, color: tuple[int, int, int] = (255, 0, 0)):
          - Initializes the bullet with a given position, speed, direction, radius, and color, setting up for in-game interactions.
        - move():
          - Computes updated bullet position by applying speed and direction to current coordinates, adjusted for time elapsed.
        - update():
          - Executes position update of the bullet through its move method, making it ready for subsequent game interactions.
        - draw(surface: pygame.Surface):
          - Visually represents the bullet on a given surface utilizing its position, radius, and color characteristics.
        - render(surface: pygame.Surface):
          - Activates the draw function to display the bullet within the game loopâ€™s rendering phase.
        - is_off_screen(screen_size: tuple[int, int]) -> bool:
          - Verifies if the bullet's position exceeds the boundaries of the specified screen size, signaling removal necessity.