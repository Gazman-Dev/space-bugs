- Purpose: Represents bullet objects in the game, handling movement, collision detection, rendering, and identifying their location. Updates and renders bullets based on their position relative to the gameplay screen.
- Imports:
  - import pygame
  - from path.to.vector2_module import Vector2
- Definitions:
  - Classes:
    - Bullet:
      - Attributes:
        - position: Vector2 - starting  coordinates for the bullet.
        - speed: float - bullet speed value.
        - direction: Vector2 - direction vector for bullet movement.
        - radius: int - bullet's visual size on the screen.
        - color: tuple[int, int, int] - RGB color value of the bullet.
      - Methods:
        - __init__(position: Vector2, speed: float, direction: Vector2, radius: int = 5, color: tuple[int, int, int] = (255, 0, 0)):
          - Initializes with position, speed, direction, radius, and color, configuring its attributes for circle representation.
        - move():
          - Updates position by applying speed and direction, adjusted for elapsed time.
        - update(surface: pygame.Surface):
          - Updates position through move method, ensuring position stays within provided surface boundaries.
        - draw(screen: pygame.Surface):
          - Adjusts bullet position based on screen dimensions and draws it as a circle on the given screen using specified radius and color.
        - is_off_screen(screen_size: tuple[int, int]) -> bool:
          - Checks if bullet's position is beyond given screen boundaries, indicating removal.
        - rect() -> pygame.Rect:
          - Provides Rect object of bullet's position, calculated from position and radius, to denote location on screen.