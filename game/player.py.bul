- Purpose: Manages player controls and actions, including movement and shooting mechanics. It handles the rendering of player and bullet images using assets from assets_loader.py and updates the game state for the player and bullets.

- Imports:
  - import pygame
  - import configs.config as config
  - import pygame.math.Vector2
  - import assets_loader

- Definitions:
  - Classes:
    - Player:
      - Attributes:
        - position: pygame.math.Vector2 - Sets the initial coordinates of the player ship on the screen with Vector2 for position tracking.
        - speed: float - Determines the player's movement speed, obtained from config.PLAYER_SPEED.
        - bullets: list - A collection of bullet objects fired by the player.
        - direction: pygame.math.Vector2 - Represents the movement direction as a Vector2.
        - player_image: pygame.Surface - The visual representation of the player ship, loaded using assets_loader.
      - Methods:
        - move(self, direction: pygame.math.Vector2) -> None:
          - Adjusts the player's position by applying the speed, scaled according to the direction vector, resulting in smooth movement using Vector2 math.
        - shoot(self) -> None:
          - Creates a new bullet object located at the player's current position and stores it in the bullets list for tracking and rendering.
        - draw(self, surface: pygame.Surface) -> None:
          - Displays the player ship image onto the provided surface, centering it at the player's current position.
        - update(self) -> None:
          - Applies movement updates, triggers shooting, and performs any other necessary adjustments each game cycle. It updates the player's position based on input direction and manages the bullets list effectively.