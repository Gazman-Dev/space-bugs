- Purpose: Defines behavior and logic for enemy characters, including movement, shooting, drawing, collision detection, rendering, and updating within the game loop.
- Imports:
  - import pygame
  - from pygame.math import Vector2
  - from game.bullet import Bullet
  - from configs.config import ENEMY_SPEED
- Definitions:
  - Classes:
    - Enemy:
      - Attributes:
        - position: Initial position of enemy on the screen as a Vector2 for better manipulation.
        - speed: Speed for enemy movement, derived from config.ENEMY_SPEED.
        - direction: Current movement direction as a Vector2, initialized downwards.
        - bullets: List storing bullets fired by the enemy.
      - Methods:
        - move():
          - Calculate new position by adding the product of speed and direction to current position; update the position.
        - shoot():
          - Create a new Bullet object at position directly below the enemy; append this bullet to the bullets list.
        - draw(surface):
          - Use pygame to render the enemy as a red square at its current position on the given surface.
        - check_collision(obj):
          - Use pygame's collision detection to evaluate if this enemy intersects with the provided object's rectangle.
        - update():
          - Update the enemy's state by calling move(), checking for bullet collisions, and managing off-screen bullets.
        - render(screen):
          - Draw the enemy and its bullets on the provided screen surface within each game loop iteration.